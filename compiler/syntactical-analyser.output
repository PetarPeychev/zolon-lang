Terminals unused in grammar

   IF
   COLON
   BAR


State 47 conflicts: 13 shift/reduce
State 53 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: bindings main-binding

    2 bindings: bindings binding
    3         | binding

    4 binding: IDENTIFIER BIND expression

    5 main-binding: MAIN BIND expression

    6 expression: LPAREN expression RPAREN
    7           | function
    8           | infix-operation
    9           | prefix-operation
   10           | literal
   11           | function-call
   12           | list

   13 function: IDENTIFIER MAP expression

   14 infix-operation: expression infix-operator expression

   15 infix-operator: PIPE
   16               | PLUS
   17               | MINUS
   18               | MULTIPLY
   19               | DIVIDE
   20               | LESS
   21               | GREATER
   22               | EQUAL
   23               | LESS_EQUAL
   24               | GREATER_EQUAL
   25               | NOT_EQUAL
   26               | AND
   27               | OR

   28 prefix-operation: prefix-operator expression

   29 prefix-operator: NOT

   30 literal: NUMBER
   31        | boolean

   32 boolean: TRUE
   33        | FALSE

   34 function-call: IDENTIFIER IDENTIFIER

   35 list: LBRACKET list-items RBRACKET

   36 list-items: %empty
   37           | non-empty-list-items

   38 non-empty-list-items: list-items COMMA expression
   39                     | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 30
IDENTIFIER (259) 4 13 34
MAIN (260) 5
LPAREN (261) 6
RPAREN (262) 6
TRUE (263) 32
FALSE (264) 33
LBRACKET (265) 35
RBRACKET (266) 35
IF (267)
COMMA (268) 38
BIND (269) 4 5
COLON (270)
MAP (271) 13
BAR (272)
PIPE (273) 15
AND (274) 26
OR (275) 27
EQUAL (276) 22
NOT_EQUAL (277) 25
LESS (278) 20
GREATER (279) 21
LESS_EQUAL (280) 23
GREATER_EQUAL (281) 24
PLUS (282) 16
MINUS (283) 17
MULTIPLY (284) 18
DIVIDE (285) 19
NOT (286) 29


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
bindings (34)
    on left: 2 3, on right: 1 2
binding (35)
    on left: 4, on right: 2 3
main-binding (36)
    on left: 5, on right: 1
expression (37)
    on left: 6 7 8 9 10 11 12, on right: 4 5 6 13 14 28 38 39
function (38)
    on left: 13, on right: 7
infix-operation (39)
    on left: 14, on right: 8
infix-operator (40)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27, on right: 14
prefix-operation (41)
    on left: 28, on right: 9
prefix-operator (42)
    on left: 29, on right: 28
literal (43)
    on left: 30 31, on right: 10
boolean (44)
    on left: 32 33, on right: 31
function-call (45)
    on left: 34, on right: 11
list (46)
    on left: 35, on right: 12
list-items (47)
    on left: 36 37, on right: 35 38
non-empty-list-items (48)
    on left: 38 39, on right: 37


State 0

    0 $accept: . program $end

    IDENTIFIER  shift, and go to state 1

    program   go to state 2
    bindings  go to state 3
    binding   go to state 4


State 1

    4 binding: IDENTIFIER . BIND expression

    BIND  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: bindings . main-binding
    2 bindings: bindings . binding

    IDENTIFIER  shift, and go to state 1
    MAIN        shift, and go to state 7

    binding       go to state 8
    main-binding  go to state 9


State 4

    3 bindings: binding .

    $default  reduce using rule 3 (bindings)


State 5

    4 binding: IDENTIFIER BIND . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 17
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 6

    0 $accept: program $end .

    $default  accept


State 7

    5 main-binding: MAIN . BIND expression

    BIND  shift, and go to state 26


State 8

    2 bindings: bindings binding .

    $default  reduce using rule 2 (bindings)


State 9

    1 program: bindings main-binding .

    $default  reduce using rule 1 (program)


State 10

   30 literal: NUMBER .

    $default  reduce using rule 30 (literal)


State 11

   13 function: IDENTIFIER . MAP expression
   34 function-call: IDENTIFIER . IDENTIFIER

    IDENTIFIER  shift, and go to state 27
    MAP         shift, and go to state 28


State 12

    6 expression: LPAREN . expression RPAREN

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 29
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 13

   32 boolean: TRUE .

    $default  reduce using rule 32 (boolean)


State 14

   33 boolean: FALSE .

    $default  reduce using rule 33 (boolean)


State 15

   35 list: LBRACKET . list-items RBRACKET

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    $default  reduce using rule 36 (list-items)

    expression            go to state 30
    function              go to state 18
    infix-operation       go to state 19
    prefix-operation      go to state 20
    prefix-operator       go to state 21
    literal               go to state 22
    boolean               go to state 23
    function-call         go to state 24
    list                  go to state 25
    list-items            go to state 31
    non-empty-list-items  go to state 32


State 16

   29 prefix-operator: NOT .

    $default  reduce using rule 29 (prefix-operator)


State 17

    4 binding: IDENTIFIER BIND expression .
   14 infix-operation: expression . infix-operator expression

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    $default  reduce using rule 4 (binding)

    infix-operator  go to state 46


State 18

    7 expression: function .

    $default  reduce using rule 7 (expression)


State 19

    8 expression: infix-operation .

    $default  reduce using rule 8 (expression)


State 20

    9 expression: prefix-operation .

    $default  reduce using rule 9 (expression)


State 21

   28 prefix-operation: prefix-operator . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 47
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 22

   10 expression: literal .

    $default  reduce using rule 10 (expression)


State 23

   31 literal: boolean .

    $default  reduce using rule 31 (literal)


State 24

   11 expression: function-call .

    $default  reduce using rule 11 (expression)


State 25

   12 expression: list .

    $default  reduce using rule 12 (expression)


State 26

    5 main-binding: MAIN BIND . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 48
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 27

   34 function-call: IDENTIFIER IDENTIFIER .

    $default  reduce using rule 34 (function-call)


State 28

   13 function: IDENTIFIER MAP . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 49
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 29

    6 expression: LPAREN expression . RPAREN
   14 infix-operation: expression . infix-operator expression

    RPAREN         shift, and go to state 50
    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    infix-operator  go to state 46


State 30

   14 infix-operation: expression . infix-operator expression
   39 non-empty-list-items: expression .

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    $default  reduce using rule 39 (non-empty-list-items)

    infix-operator  go to state 46


State 31

   35 list: LBRACKET list-items . RBRACKET
   38 non-empty-list-items: list-items . COMMA expression

    RBRACKET  shift, and go to state 51
    COMMA     shift, and go to state 52


State 32

   37 list-items: non-empty-list-items .

    $default  reduce using rule 37 (list-items)


State 33

   15 infix-operator: PIPE .

    $default  reduce using rule 15 (infix-operator)


State 34

   26 infix-operator: AND .

    $default  reduce using rule 26 (infix-operator)


State 35

   27 infix-operator: OR .

    $default  reduce using rule 27 (infix-operator)


State 36

   22 infix-operator: EQUAL .

    $default  reduce using rule 22 (infix-operator)


State 37

   25 infix-operator: NOT_EQUAL .

    $default  reduce using rule 25 (infix-operator)


State 38

   20 infix-operator: LESS .

    $default  reduce using rule 20 (infix-operator)


State 39

   21 infix-operator: GREATER .

    $default  reduce using rule 21 (infix-operator)


State 40

   23 infix-operator: LESS_EQUAL .

    $default  reduce using rule 23 (infix-operator)


State 41

   24 infix-operator: GREATER_EQUAL .

    $default  reduce using rule 24 (infix-operator)


State 42

   16 infix-operator: PLUS .

    $default  reduce using rule 16 (infix-operator)


State 43

   17 infix-operator: MINUS .

    $default  reduce using rule 17 (infix-operator)


State 44

   18 infix-operator: MULTIPLY .

    $default  reduce using rule 18 (infix-operator)


State 45

   19 infix-operator: DIVIDE .

    $default  reduce using rule 19 (infix-operator)


State 46

   14 infix-operation: expression infix-operator . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 53
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 47

   14 infix-operation: expression . infix-operator expression
   28 prefix-operation: prefix-operator expression .

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    PIPE           [reduce using rule 28 (prefix-operation)]
    AND            [reduce using rule 28 (prefix-operation)]
    OR             [reduce using rule 28 (prefix-operation)]
    EQUAL          [reduce using rule 28 (prefix-operation)]
    NOT_EQUAL      [reduce using rule 28 (prefix-operation)]
    LESS           [reduce using rule 28 (prefix-operation)]
    GREATER        [reduce using rule 28 (prefix-operation)]
    LESS_EQUAL     [reduce using rule 28 (prefix-operation)]
    GREATER_EQUAL  [reduce using rule 28 (prefix-operation)]
    PLUS           [reduce using rule 28 (prefix-operation)]
    MINUS          [reduce using rule 28 (prefix-operation)]
    MULTIPLY       [reduce using rule 28 (prefix-operation)]
    DIVIDE         [reduce using rule 28 (prefix-operation)]
    $default       reduce using rule 28 (prefix-operation)

    infix-operator  go to state 46


State 48

    5 main-binding: MAIN BIND expression .
   14 infix-operation: expression . infix-operator expression

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    $default  reduce using rule 5 (main-binding)

    infix-operator  go to state 46


State 49

   13 function: IDENTIFIER MAP expression .
   14 infix-operation: expression . infix-operator expression

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    $default  reduce using rule 13 (function)

    infix-operator  go to state 46


State 50

    6 expression: LPAREN expression RPAREN .

    $default  reduce using rule 6 (expression)


State 51

   35 list: LBRACKET list-items RBRACKET .

    $default  reduce using rule 35 (list)


State 52

   38 non-empty-list-items: list-items COMMA . expression

    NUMBER      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    LPAREN      shift, and go to state 12
    TRUE        shift, and go to state 13
    FALSE       shift, and go to state 14
    LBRACKET    shift, and go to state 15
    NOT         shift, and go to state 16

    expression        go to state 54
    function          go to state 18
    infix-operation   go to state 19
    prefix-operation  go to state 20
    prefix-operator   go to state 21
    literal           go to state 22
    boolean           go to state 23
    function-call     go to state 24
    list              go to state 25


State 53

   14 infix-operation: expression . infix-operator expression
   14                | expression infix-operator expression .

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    PIPE           [reduce using rule 14 (infix-operation)]
    AND            [reduce using rule 14 (infix-operation)]
    OR             [reduce using rule 14 (infix-operation)]
    EQUAL          [reduce using rule 14 (infix-operation)]
    NOT_EQUAL      [reduce using rule 14 (infix-operation)]
    LESS           [reduce using rule 14 (infix-operation)]
    GREATER        [reduce using rule 14 (infix-operation)]
    LESS_EQUAL     [reduce using rule 14 (infix-operation)]
    GREATER_EQUAL  [reduce using rule 14 (infix-operation)]
    PLUS           [reduce using rule 14 (infix-operation)]
    MINUS          [reduce using rule 14 (infix-operation)]
    MULTIPLY       [reduce using rule 14 (infix-operation)]
    DIVIDE         [reduce using rule 14 (infix-operation)]
    $default       reduce using rule 14 (infix-operation)

    infix-operator  go to state 46


State 54

   14 infix-operation: expression . infix-operator expression
   38 non-empty-list-items: list-items COMMA expression .

    PIPE           shift, and go to state 33
    AND            shift, and go to state 34
    OR             shift, and go to state 35
    EQUAL          shift, and go to state 36
    NOT_EQUAL      shift, and go to state 37
    LESS           shift, and go to state 38
    GREATER        shift, and go to state 39
    LESS_EQUAL     shift, and go to state 40
    GREATER_EQUAL  shift, and go to state 41
    PLUS           shift, and go to state 42
    MINUS          shift, and go to state 43
    MULTIPLY       shift, and go to state 44
    DIVIDE         shift, and go to state 45

    $default  reduce using rule 38 (non-empty-list-items)

    infix-operator  go to state 46
